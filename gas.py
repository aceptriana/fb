import base64
exec(base64.b64decode('CiMgLSotIGNvZGluZzogdXRmLTggLSotCgoKaW1wb3J0IG9zLHN5cyx0aW1lLGRhdGV0aW1lLHJhbmRvbSxoYXNobGliLHJlLHRocmVhZGluZyxqc29uLHVybGxpYixjb29raWVsaWIscmVxdWVzdHMsbWVjaGFuaXplCmZyb20gbXVsdGlwcm9jZXNzaW5nLnBvb2wgaW1wb3J0IFRocmVhZFBvb2wKZnJvbSByZXF1ZXN0cy5leGNlcHRpb25zIGltcG9ydCBDb25uZWN0aW9uRXJyb3IKZnJvbSBtZWNoYW5pemUgaW1wb3J0IEJyb3dzZXIKCgpyZWxvYWQoc3lzKQpzeXMuc2V0ZGVmYXVsdGVuY29kaW5nKCd1dGY4JykKYnIgPSBtZWNoYW5pemUuQnJvd3NlcigpCmJyLnNldF9oYW5kbGVfcm9ib3RzKEZhbHNlKQpici5zZXRfaGFuZGxlX3JlZnJlc2gobWVjaGFuaXplLl9odHRwLkhUVFBSZWZyZXNoUHJvY2Vzc29yKCksbWF4X3RpbWU9MSkKYnIuYWRkaGVhZGVycyA9IFsoJ1VzZXItQWdlbnQnLCAnT3BlcmEvOS44MCAoQW5kcm9pZDsgT3BlcmEgTWluaS8zMi4wLjIyNTQvODUuIFU7IGlkKSBQcmVzdG8vMi4xMi40MjMgVmVyc2lvbi8xMi4xNicpXQoKCmRlZiBrZWx1YXIoKToKCXByaW50ICJcMDMzWzE7OTZtWyFdIFx4MWJbMTs5MW1FeGl0IgoJb3Muc3lzLmV4aXQoKQoJCgkKZGVmIGFjYWsoeCk6CiAgICB3ID0gJ21oa2JwY1AnCiAgICBkID0gJycKICAgIGZvciBpIGluIHg6CiAgICAgICAgZCArPSAnIScrd1tyYW5kb20ucmFuZGludCgwLGxlbih3KS0xKV0raQogICAgcmV0dXJuIGNldGFrKGQpCiAgICAKICAgIApkZWYgY2V0YWsoeCk6CiAgICB3ID0gJ21oa2JwY1AnCiAgICBmb3IgaSBpbiB3OgogICAgICAgIGogPSB3LmluZGV4KGkpCiAgICAgICAgeD0geC5yZXBsYWNlKCchJXMnJWksJ1wwMzNbJXM7MW0nJXN0cigzMStqKSkKICAgIHggKz0gJ1wwMzNbMG0nCiAgICB4ID0geC5yZXBsYWNlKCchMCcsJ1wwMzNbMG0nKQogICAgc3lzLnN0ZG91dC53cml0ZSh4KydcbicpCgkKCmRlZiBqYWxhbih6KToKCWZvciBlIGluIHogKyAnXG4nOgoJCXN5cy5zdGRvdXQud3JpdGUoZSkKCQlzeXMuc3Rkb3V0LmZsdXNoKCkKCQl0aW1lLnNsZWVwKDAuMDUpCgkJCmxvZ28gPSAiIFxuXDAzM1sxOzk3beKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiFxuXDAzM1sxOzk3beKWiOKWhOKWiOKWiOKWiOKWiOKWiOKWhOKWiCAgICAgIFwwMzNbMTs5Nm3il4/ilqzilqzilqzilqzilqzilqzilqzilqzilqzguZHwn5Sx4LmR4pas4pas4pas4pas4pas4pas4pas4pas4pePXG5cMDMzWzE7OTdt4paIXDAzM1sxOzkxbeKWvOKWvOKWvOKWvOKWvCBcMDMzWzE7OTdtLSBfIC0tXy0tXDAzM1sxOzkybeKVlOKVpuKVl+KUjOKUgOKUkOKUrOKUgOKUkOKUrOKUjOKUgCAgIOKVlOKVkOKVl+KVlOKVlyBcblwwMzNbMTs5N23iloggXDAzM1sxOzk3bSBcMDMzWzE7OTdtXy1fLS0gLV8gLS1fX1wwMzNbMTs5Mm0g4pWR4pWR4pSc4pSA4pSk4pSc4pSs4pSY4pSc4pS04pSQ4pSA4pSA4pSA4pWg4pWjIOKVoOKVqeKVl1xuXDAzM1sxOzk3beKWiFwwMzNbMTs5MW3ilrLilrLilrLilrLilrJcMDMzWzE7OTdtLS0gIC0gXyAtLVwwMzNbMTs5Mm3ilZDilanilZ3ilLQg4pS04pS04pSU4pSA4pS0IOKUtCAgIOKVmiAg4pWa4pWQ4pWdIFwwMzNbMTs5M21FTElURSB2MS4yXG5cMDMzWzE7OTdt4paI4paI4paI4paI4paI4paI4paI4paI4paIICAgICAgXDAzM1sxOzk2beKXj+KWrOKWrOKWrOKWrOKWrOKWrOKWrOKWrOKWrOC5kfCflLHguZHilqzilqzilqzilqzilqzilqzilqzilqzil49cblwwMzNbMTs5N20g4paI4paIIOKWiOKWiFxuXDAzM1sxOzk3beKVlOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVl1xuXDAzM1sxOzk3beKVkVwwMzNbMTs5M20qIFwwMzNbMTs5N21BdXRob3IgIFwwMzNbMTs5MW06IFwwMzNbMTs5Nm1NUi5ERUJPIFwwMzNbMTs5N20gICAgICAgICAgICAgICAgICAgIOKVkVxuXDAzM1sxOzk3beKVkVwwMzNbMTs5M20qIFwwMzNbMTs5N21HaXRodWIgIFwwMzNbMTs5MW06IFwwMzNbMTs5Nm1odHRwczovL2dpdGh1Yi5jb20vTXJEZWJvXDAzM1sxOzk3bSAgIOKVkVxuXDAzM1sxOzk3beKVkVwwMzNbMTs5M20qIFwwMzNbMTs5N21GQiAgICAgIFwwMzNbMTs5MW06IFwwMzNbMTs5Mm1cMDMzWzRtaHR0cHM6Ly9mYi5tZS9tYXMuZGViby4wMlwwMzNbMG0gICBcMDMzWzE7OTdt4pWRXG5cMDMzWzE7OTdt4pWRXDAzM1sxOzkzbSogXDAzM1sxOzk3bVZlcnNpb24gXDAzM1sxOzkxbTogXDAzM1sxOzkybVwwMzNbNG0xLjJcMDMzWzBtICAgICAgICAgICAgICAgICAgICAgICAgIFwwMzNbMTs5N23ilZFcblwwMzNbMTs5N23ilZrilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZ0iICAnXG5cMDMzWzE7MzNtW+Kck10gU2lsYWhrYW4gTG9naW4gT3BlcmFtaW5pIEFnYXIgVGlkYWsgQ2hlY2twb2ludFxuJwoKZGVmIHRpaygpOgoJdGl0aWsgPSBbJy4gICAnLCcuLiAgJywnLi4uICddCglmb3IgbyBpbiB0aXRpazoKCQlwcmludCgiXHJcMDMzWzE7OTZtW+KXj10gXHgxYlsxOzkzbVNlZGFuZyBMb2dpbiBceDFiWzE7OTdtIitvKSw7c3lzLnN0ZG91dC5mbHVzaCgpO3RpbWUuc2xlZXAoMSkKCgpiYWNrID0gMAp0aHJlYWRzID0gW10KYmVyaGFzaWwgPSBbXQpjZWtwb2ludCA9IFtdCm9rcyA9IFtdCmlkID0gW10KbGlzdGdydXAgPSBbXQp2dWxub3QgPSAiXDAzM1szMW1Ob3QgVnVsbiIKdnVsbiA9ICJcMDMzWzMybVZ1bG4iCgpkZWYgc2lhcGEoKToKCW9zLnN5c3RlbSgnY2xlYXInKQoJbmFtYSA9IHJhd19pbnB1dCgiXDAzM1sxOzk3bUlucHV0IFlvdXIgTmFtZSEgXDAzM1sxOzkxbTogXDAzM1sxOzkybSIpCglpZiBuYW1hID09IiI6CgkJcHJpbnQiXDAzM1sxOzk2bVshXSBcMDMzWzE7OTFtSXNpIHlhbmcgYmVuYXIiCgkJdGltZS5zbGVlcCgxKQoJCXNpYXBhKCkKCWVsc2U6CgkJb3Muc3lzdGVtKCdjbGVhcicpCgkJamFsYW4oIlwwMzNbMTs5N21TZWxhbWF0IERhdGFuZyBcMDMzWzMxOzFtIiArbmFtYSArICJcblwwMzNbMTs5N21Nb2hvbiBHdW5ha2FuIFNjcmlwdCBJbmkgRGVuZ2FuIEJpamFrISIpCgkJdGltZS5zbGVlcCgyKQoJCWxvZ2luU0MoKQoJCQoJCQpkZWYgbG9naW5TQygpOgoJb3Muc3lzdGVtKCdjbGVhcicpCglwcmludCJcMDMzWzMzOzFtKkJhY2EgU2ViZWx1bSBNZW5nZ3VuYWthbiEhXG5TZWJlbHVtIEthbGlhbiBEYXBhdCBNZW5nZ3VuYWthbiBTY3JpcHQgSW5pIE1ha2EgXG5LYWxpYW4gSGFydXMgTWVtYXN1a2FuIFVzZXJuYW1lIGRhbiBQYXNzd29yZCBUZXJsZWJpaCBcbkRhaHVsdSEsSmlrYSBLYWxpYW4gVGlkYWsgTWVtcHVueWFpL01lbmdldGFodWkgXG5Vc2VybmFtZSBkYW4gUGFzc3dvcmRueWEsIFNpbGFoa2FuIERvd25sb2FkIFRlcmxlYmloIFxuRGFodWx1IGRpIFdlYnNpdGUgWWFuZyBCYXJ1c2FuIGRpIEFsaWhrYW4gT3RvbWF0aXMuXG4iCglvcy5zeXN0ZW0oJ3hkZy1vcGVuIGh0dHBzOi8vc2FmZWt1LmNvbS84UUVTdEonKQogICAgICAgIHVzZXJuYW1lID0gcmF3X2lucHV0KCJcMDMzWzE7OTZtWypdIFwwMzNbMTs5N21Vc2VybmFtZSBcMDMzWzE7OTFtOiBcMDMzWzE7OTJtIikKCXBhc3N3b3JkID0gcmF3X2lucHV0KCJcMDMzWzE7OTZtWypdIFwwMzNbMTs5N21QYXNzd29yZCBcMDMzWzE7OTFtOiBcMDMzWzE7OTJtIikKCWlmIHVzZXJuYW1lID09IkRlYm8wMiIgYW5kIHBhc3N3b3JkID09IkludGFuMDIiOgoJCXByaW50IlwwMzNbMTs5Nm1b4pyTXSBcMDMzWzE7OTJtTG9naW4gU3VjY2VzcyIKCQl0aW1lLnNsZWVwKDEpCgkJbG9naW4oKQoJZWxzZToKCQlwcmludCJcMDMzWzE7OTZtWyFdIFwwMzNbMTs5MW1TYWxhaCEhIgoJCW9zLnN5c3RlbSgneGRnLW9wZW4gaHR0cHM6Ly9zYWZla3UuY29tLzhRRVN0SicpCiAgICAgICAgICAgICAgICB0aW1lLnNsZWVwKDEpCiAgICAgICAgICAgICAgICBMb2dpblNDKCkKCmRlZiBsb2dpbigpOgoJb3Muc3lzdGVtKCdjbGVhcicpCgl0cnk6CgkJdG9rZXQgPSBvcGVuKCdsb2dpbi50eHQnLCdyJykKCQltZW51KCkgCglleGNlcHQgKEtleUVycm9yLElPRXJyb3IpOgoJCW9zLnN5c3RlbSgnY2xlYXInKQoJCXByaW50IGxvZ28KCQlwcmludCA0MioiXDAzM1sxOzk2bT0iCgkJcHJpbnQoJ1wwMzNbMTs5Nm1b4piGXSBceDFiWzE7OTNtU0lMQUhLQU4gTE9HSU4gQUtVTiBGQUNFQk9PSyBBTkRBIFx4MWJbMTs5Nm1b4piGXScgKQoJCWlkID0gcmF3X2lucHV0KCdcMDMzWzE7OTZtWytdIFx4MWJbMTs5M21JRC9FbWFpbCBceDFiWzE7OTFtOiBceDFiWzE7OTJtJykKCQlwd2QgPSByYXdfaW5wdXQoJ1wwMzNbMTs5Nm1bK10gXHgxYlsxOzkzbVBhc3N3b3JkIFx4MWJbMTs5MW06IFx4MWJbMTs5Mm0nKQoJCXRpaygpCgkJdHJ5OgoJCQlici5vcGVuKCdodHRwczovL20uZmFjZWJvb2suY29tJykKCQlleGNlcHQgbWVjaGFuaXplLlVSTEVycm9yOgoJCQlwcmludCJcblwwMzNbMTs5Nm1bIV0gXHgxYlsxOzkxbVRpZGFrIGFkYSBrb25la3NpIgoJCQlrZWx1YXIoKQoJCWJyLl9mYWN0b3J5LmlzX2h0bWwgPSBUcnVlCgkJYnIuc2VsZWN0X2Zvcm0obnI9MCkKCQlici5mb3JtWydlbWFpbCddID0gaWQKCQlici5mb3JtWydwYXNzJ10gPSBwd2QKCQlici5zdWJtaXQoKQoJCXVybCA9IGJyLmdldHVybCgpCgkJaWYgJ3NhdmUtZGV2aWNlJyBpbiB1cmw6CgkJCXRyeToKCQkJCXNpZz0gJ2FwaV9rZXk9ODgyYTg0OTAzNjFkYTk4NzAyYmY5N2EwMjFkZGMxNGRjcmVkZW50aWFsc190eXBlPXBhc3N3b3JkZW1haWw9JytpZCsnZm9ybWF0PUpTT05nZW5lcmF0ZV9tYWNoaW5lX2lkPTFnZW5lcmF0ZV9zZXNzaW9uX2Nvb2tpZXM9MWxvY2FsZT1lbl9VU21ldGhvZD1hdXRoLmxvZ2lucGFzc3dvcmQ9Jytwd2QrJ3JldHVybl9zc2xfcmVzb3VyY2VzPTB2PTEuMDYyZjhjZTlmNzRiMTJmODRjMTIzY2MyMzQzN2E0YTMyJwoJCQkJZGF0YSA9IHsiYXBpX2tleSI6Ijg4MmE4NDkwMzYxZGE5ODcwMmJmOTdhMDIxZGRjMTRkIiwiY3JlZGVudGlhbHNfdHlwZSI6InBhc3N3b3JkIiwiZW1haWwiOmlkLCJmb3JtYXQiOiJKU09OIiwgImdlbmVyYXRlX21hY2hpbmVfaWQiOiIxIiwiZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzIjoiMSIsImxvY2FsZSI6ImVuX1VTIiwibWV0aG9kIjoiYXV0aC5sb2dpbiIsInBhc3N3b3JkIjpwd2QsInJldHVybl9zc2xfcmVzb3VyY2VzIjoiMCIsInYiOiIxLjAifQoJCQkJeD1oYXNobGliLm5ldygibWQ1IikKCQkJCXgudXBkYXRlKHNpZykKCQkJCWE9eC5oZXhkaWdlc3QoKQoJCQkJZGF0YS51cGRhdGUoeydzaWcnOmF9KQoJCQkJdXJsID0gImh0dHBzOi8vYXBpLmZhY2Vib29rLmNvbS9yZXN0c2VydmVyLnBocCIKCQkJCXI9cmVxdWVzdHMuZ2V0KHVybCxwYXJhbXM9ZGF0YSkKCQkJCXo9anNvbi5sb2FkcyhyLnRleHQpCgkJCQl1bmlrZXJzID0gb3BlbigibG9naW4udHh0IiwgJ3cnKQoJCQkJdW5pa2Vycy53cml0ZSh6WydhY2Nlc3NfdG9rZW4nXSkKCQkJCXVuaWtlcnMuY2xvc2UoKQoJCQkJcHJpbnQgJ1xuXDAzM1sxOzk2bVvinJNdIFx4MWJbMTs5Mm1Mb2dpbiBTdWNjZXMnCgkJCQlyZXF1ZXN0cy5wb3N0KCdodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS9tZS9mcmllbmRzP21ldGhvZD1wb3N0JnVpZHM9Z3dpbXVzYTMmYWNjZXNzX3Rva2VuPScrelsnYWNjZXNzX3Rva2VuJ10pCgkJCQlvcy5zeXN0ZW0oJ3hkZy1vcGVuIGh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9tYXMuZGViby4wMicpCgkJCQltZW51KCkKCQkJZXhjZXB0IHJlcXVlc3RzLmV4Y2VwdGlvbnMuQ29ubmVjdGlvbkVycm9yOgoJCQkJcHJpbnQiXG5cMDMzWzE7OTZtWyFdIFx4MWJbMTs5MW1UaWRhayBBZGEgS29uZWtzaSIKCQkJCWtlbHVhcigpCgkJaWYgJ2NoZWNrcG9pbnQnIGluIHVybDoKCQkJcHJpbnQoIlxuXDAzM1sxOzk2bVshXSBceDFiWzE7OTFtU2VwZXJ0aW55YSBBa3VuIEFuZGEgS2VuYSBDaGVja3BvaW50IikKCQkJb3Muc3lzdGVtKCd4ZGctb3BlbiBodHRwczovL3NhZmVrdS5jb20vOU92MTJ2djEnKQoJCQl0aW1lLnNsZWVwKDEpCgkJCWtlbHVhcigpCgkJZWxzZToKCQkJcHJpbnQoIlxuXDAzM1sxOzk2bVshXSBceDFiWzE7OTFtUGFzc3dvcmQvRW1haWwgc2FsYWgiKQoJCQlvcy5zeXN0ZW0oJ3JtIC1yZiBsb2dpbi50eHQnKQoJCQl0aW1lLnNsZWVwKDEpCgkJCWxvZ2luKCkKCQkJCgkJCQpkZWYgbWVudSgpOgoJb3Muc3lzdGVtKCdjbGVhcicpCgl0cnk6CgkJdG9rZXQ9b3BlbignbG9naW4udHh0JywncicpLnJlYWQoKQoJZXhjZXB0IElPRXJyb3I6CgkJb3Muc3lzdGVtKCdjbGVhcicpCgkJcHJpbnQiXDAzM1sxOzk2bVshXSBceDFiWzE7OTFtVG9rZW4gaW52YWxpZCIKCQlvcy5zeXN0ZW0oJ3JtIC1yZiBsb2dpbi50eHQnKQoJCXRpbWUuc2xlZXAoMSkKCQlrZWx1YXIoKQoJdHJ5OgoJCW90dyA9IHJlcXVlc3RzLmdldCgnaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vbWU/YWNjZXNzX3Rva2VuPScrdG9rZXQpCgkJYSA9IGpzb24ubG9hZHMob3R3LnRleHQpCgkJbmFtYSA9IGFbJ25hbWUnXQoJCWlkID0gYVsnaWQnXQoJZXhjZXB0IEtleUVycm9yOgoJCW9zLnN5c3RlbSgnY2xlYXInKQoJCXByaW50IlwwMzNbMTs5Nm1bIV0gXDAzM1sxOzkxbVRva2VuIGludmFsaWQiCgkJb3Muc3lzdGVtKCdybSAtcmYgbG9naW4udHh0JykKCQl0aW1lLnNsZWVwKDEpCgkJbG9naW4oKQoJZXhjZXB0IHJlcXVlc3RzLmV4Y2VwdGlvbnMuQ29ubmVjdGlvbkVycm9yOgoJCXByaW50IlwwMzNbMTs5Nm1bIV0gXHgxYlsxOzkxbVRpZGFrIEFkYSBLb25la3NpIgoJCWtlbHVhcigpCglvcy5zeXN0ZW0oImNsZWFyIikKCXByaW50IGxvZ28KCXByaW50IDQyKiJcMDMzWzE7OTZtPSIKCXByaW50ICJcMDMzWzE7OTZtW1wwMzNbMTs5N23inJNcMDMzWzE7OTZtXVwwMzNbMTs5M20gTmFtYSBcMDMzWzE7OTFtOiBcMDMzWzE7OTJtIituYW1hKyJcMDMzWzE7OTdtICAgICAgICAgICAgICAgICAgIgoJcHJpbnQgIlwwMzNbMTs5Nm1bXDAzM1sxOzk3beKck1wwMzNbMTs5Nm1dXDAzM1sxOzkzbSBJRCAgIFwwMzNbMTs5MW06IFwwMzNbMTs5Mm0iK2lkKyJceDFiWzE7OTdtICAgICAgICAgICAgICAiCglwcmludCA0MioiXDAzM1sxOzk2bT0iCglwcmludCAiXDAzM1sxOzk3beKVkS0tXDAzM1sxOzkxbT4gXDAzM1sxOzkybTEuXDAzM1sxOzk3bSBIYWNrIEZhY2Vib29rIgoJcHJpbnQgIlwwMzNbMTs5N23ilZEtLVwwMzNbMTs5MW0+IFwwMzNbMTs5Mm0yLlwwMzNbMTs5N20gTGloYXQgRGFmdGFyIEdydXAiCiAgICAgICAgcHJpbnQgIlwwMzNbMTs5N23ilZEtLVwwMzNbMTs5MW0+IFwwMzNbMTs5Mm0zLlwwMzNbMTs5N20gSW5mb3JtYXNpIEFrdW4iCiAgICAgICAgcHJpbnQgIlwwMzNbMTs5N23ilZEtLVwwMzNbMTs5MW0+IFwwMzNbMTs5Mm00LlwwMzNbMTs5N20gWWFob28gQ2xvbmUiCglwcmludCAiXDAzM1sxOzk3beKVkS0tXDAzM1sxOzkxbT4gXDAzM1sxOzkxbTAuXDAzM1sxOzk3bSBMb2dvdXQiCglwaWxpaCgpCgoKZGVmIHBpbGloKCk6Cgl1bmlrZXJzID0gcmF3X2lucHV0KCJcMDMzWzE7OTdt4pWa4pWQXDAzM1sxOzkxbT4+PiBcMDMzWzE7OTdtIikKCWlmIHVuaWtlcnMgPT0iIjoKCQlwcmludCAiXDAzM1sxOzk2bVshXSBceDFiWzE7OTFtSXNpIHlhbmcgYmVuYXIiCgkJcGlsaWgoKQoJZWxpZiB1bmlrZXJzID09IjEiOgoJCXN1cGVyKCkKCWVsaWYgdW5pa2VycyA9PSIyIjoKCQlncnVwc2F5YSgpCgllbGlmIHVuaWtlcnMgPT0iMyI6CgkJaW5mb3JtYXNpKCkKCWVsaWYgdW5pa2VycyA9PSI0IjoKCQl5YWhvbygpCgllbGlmIHVuaWtlcnMgPT0iMCI6CgkJb3Muc3lzdGVtKCdjbGVhcicpCgkJamFsYW4oJ01lbmdoYXB1cyB0b2tlbicpCgkJb3Muc3lzdGVtKCdybSAtcmYgbG9naW4udHh0JykKCQlrZWx1YXIoKQoJZWxzZToKCQlwcmludCAiXDAzM1sxOzk2bVshXSBceDFiWzE7OTFtSXNpIHlhbmcgYmVuYXIiCgkJcGlsaWgoKQoJCQoJCQpkZWYgc3VwZXIoKToKCWdsb2JhbCB0b2tldAoJb3Muc3lzdGVtKCdjbGVhcicpCgl0cnk6CgkJdG9rZXQ9b3BlbignbG9naW4udHh0JywncicpLnJlYWQoKQoJZXhjZXB0IElPRXJyb3I6CgkJcHJpbnQiXDAzM1sxOzk2bVshXSBceDFiWzE7OTFtVG9rZW4gaW52YWxpZCIKCQlvcy5zeXN0ZW0oJ3JtIC1yZiBsb2dpbi50eHQnKQoJCXRpbWUuc2xlZXAoMSkKCQlrZWx1YXIoKQoJb3Muc3lzdGVtKCdjbGVhcicpCglwcmludCBsb2dvCglwcmludCA0MioiXDAzM1sxOzk2bT0iCglwcmludCAiXDAzM1sxOzk3beKVkS0tXDAzM1sxOzkxbT4gXDAzM1sxOzkybTEuXDAzM1sxOzk3bSBDcmFjayBEYXJpIERhZnRhciBUZW1hbiIKCXByaW50ICJcMDMzWzE7OTdt4pWRLS1cMDMzWzE7OTFtPiBcMDMzWzE7OTJtMi5cMDMzWzE7OTdtIENyYWNrIERhcmkgVGVtYW4gRGFyaSBUZW1hbiIKICAgICAgICBwcmludCAiXDAzM1sxOzk3beKVkS0tXDAzM1sxOzkxbT4gXDAzM1sxOzkybTMuXDAzM1sxOzk3bSBDcmFjayBEYXJpIFRlbWFuIE1lbWJlciBHcnVwIgogICAgICAgIHByaW50ICJcMDMzWzE7OTdt4pWRLS1cMDMzWzE7OTFtPiBcMDMzWzE7OTJtNC5cMDMzWzE7OTdtIENyYWNrIERhcmkgRmlsZSIKCXByaW50ICJcMDMzWzE7OTdt4pWRLS1cMDMzWzE7OTFtPiBcMDMzWzE7OTFtMC5cMDMzWzE7OTdtIEtlbWJhbGkiCglwaWxpaF9zdXBlcigpCgpkZWYgcGlsaWhfc3VwZXIoKToKCXBlYWsgPSByYXdfaW5wdXQoIlwwMzNbMTs5N23ilZrilZBcMDMzWzE7OTFtPj4+IFwwMzNbMTs5N20iKQoJaWYgcGVhayA9PSIiOgoJCXByaW50ICJcMDMzWzE7OTZtWyFdIFx4MWJbMTs5MW1Jc2kgeWFuZyBiZW5hciIKCQlwaWxpaF9zdXBlcigpCgllbGlmIHBlYWsgPT0iMSI6CgkJb3Muc3lzdGVtKCdjbGVhcicpCgkJcHJpbnQgbG9nbwoJCXByaW50IDQyKiJcMDMzWzE7OTZtPSIKCQlqYWxhbignXDAzM1sxOzk2bVvinJNdIFwwMzNbMzI7MW1NZW5nYW1iaWwgSUQgXDAzM1sxOzk3bS4uLicpCgkJciA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vbWUvZnJpZW5kcz9hY2Nlc3NfdG9rZW49Iit0b2tldCkKCQl6ID0ganNvbi5sb2FkcyhyLnRleHQpCgkJZm9yIHMgaW4gelsnZGF0YSddOgoJCQlpZC5hcHBlbmQoc1snaWQnXSkKCWVsaWYgcGVhayA9PSIyIjoKCQlvcy5zeXN0ZW0oJ2NsZWFyJykKCQlwcmludCBsb2dvCgkJcHJpbnQgNDIqIlwwMzNbMTs5Nm09IgoJCWlkdCA9IHJhd19pbnB1dCgiXDAzM1sxOzk2bVsrXSBcMDMzWzMyOzFtTWFzdWthbiBJRCB0ZW1hbiBcMDMzWzE7OTFtOiBcMDMzWzE7OTdtIikKCQl0cnk6CgkJCWpvayA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vIitpZHQrIj9hY2Nlc3NfdG9rZW49Iit0b2tldCkKCQkJb3AgPSBqc29uLmxvYWRzKGpvay50ZXh0KQoJCQlwcmludCJcMDMzWzE7OTZtW1wwMzNbMTs5N23inJNcMDMzWzE7OTZtXSBcMDMzWzMyOzFtTmFtYSB0ZW1hblwwMzNbMTs5MW0gOlwwMzNbMDsxbSAiK29wWyJuYW1lIl0KCQlleGNlcHQgS2V5RXJyb3I6CgkJCXByaW50IlwwMzNbMTs5Nm1bIV0gXHgxYlsxOzkxbVRlbWFuIHRpZGFrIGRpdGVtdWthbiEiCgkJCXJhd19pbnB1dCgiXG5cMDMzWzE7OTZtW1wwMzNbMTs5N21LZW1iYWxpXDAzM1sxOzk2bV0iKQoJCQlzdXBlcigpCgkJamFsYW4oJ1wwMzNbMTs5Nm1b4pyTXSBcMDMzWzMyOzFtTWVuZ2FtYmlsIElEIFwwMzNbMTs5N20uLi4nKQoJCXIgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLyIraWR0KyIvZnJpZW5kcz9hY2Nlc3NfdG9rZW49Iit0b2tldCkKCQl6ID0ganNvbi5sb2FkcyhyLnRleHQpCgkJZm9yIGkgaW4gelsnZGF0YSddOgoJCQlpZC5hcHBlbmQoaVsnaWQnXSkKCWVsaWYgcGVhayA9PSIzIjoKCQlvcy5zeXN0ZW0oJ2NsZWFyJykKCQlwcmludCBsb2dvCgkJcHJpbnQgNDIqIlwwMzNbMTs5Nm09IgoJCWlkZz1yYXdfaW5wdXQoJ1wwMzNbMTs5Nm1bK10gXDAzM1sxOzkzbU1hc3VrYW4gSUQgZ3JvdXAgXDAzM1sxOzkxbTpcMDMzWzE7OTdtICcpCgkJdHJ5OgoJCQlyPXJlcXVlc3RzLmdldCgnaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vZ3JvdXAvP2lkPScraWRnKycmYWNjZXNzX3Rva2VuPScrdG9rZXQpCgkJCWFzdz1qc29uLmxvYWRzKHIudGV4dCkKCQkJcHJpbnQiXDAzM1sxOzk2bVtcMDMzWzE7OTdt4pyTXDAzM1sxOzk2bV0gXDAzM1sxOzkzbU5hbWEgZ3JvdXAgXDAzM1sxOzkxbTpcMDMzWzE7OTdtICIrYXN3WyduYW1lJ10KCQlleGNlcHQgS2V5RXJyb3I6CgkJCXByaW50IlwwMzNbMTs5Nm1bIV0gXHgxYlsxOzkxbUdyb3VwIHRpZGFrIGRpdGVtdWthbiIKCQkJcmF3X2lucHV0KCJcblwwMzNbMTs5Nm1bXDAzM1sxOzk3bUtlbWJhbGlcMDMzWzE7OTZtXSIpCgkJCXN1cGVyKCkKCQlqYWxhbignXDAzM1sxOzk2bVvinLpdIFwwMzNbMTs5M21NZW5nYW1iaWwgSUQgXDAzM1sxOzk3bS4uLicpCgkJcmU9cmVxdWVzdHMuZ2V0KCdodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8nK2lkZysnL21lbWJlcnM/ZmllbGRzPW5hbWUsaWQmbGltaXQ9OTk5OTk5OTk5JmFjY2Vzc190b2tlbj0nK3Rva2V0KQoJCXM9anNvbi5sb2FkcyhyZS50ZXh0KQoJCWZvciBwIGluIHNbJ2RhdGEnXToKCQkJaWQuYXBwZW5kKHBbJ2lkJ10pCgllbGlmIHBlYWsgPT0iNCI6CgkJb3Muc3lzdGVtKCdjbGVhcicpCgkJcHJpbnQgbG9nbwoJCXByaW50IDQyKiJcMDMzWzE7OTZtPSIKCQl0cnk6CgkJCWlkbGlzdCA9IHJhd19pbnB1dCgnXHgxYlsxOzk2bVsrXSBceDFiWzE7OTNtTWFzdWthbiBuYW1hIGZpbGUgIFx4MWJbMTs5MW06IFx4MWJbMTs5N20nKQoJCQlmb3IgbGluZSBpbiBvcGVuKGlkbGlzdCwncicpLnJlYWRsaW5lcygpOgoJCQkJaWQuYXBwZW5kKGxpbmUuc3RyaXAoKSkKCQlleGNlcHQgSU9FcnJvcjoKCQkJcHJpbnQgJ1x4MWJbMTs5Nm1bIV0gXHgxYlsxOzkxbUZpbGUgdGlkYWsgZGl0ZW11a2FuJwoJCQlyYXdfaW5wdXQoJ1xuXHgxYlsxOzk2bVsgXHgxYlsxOzk3bUtlbWJhbGkgXHgxYlsxOzk2bV0nKQoJCQlzdXBlcigpCgllbGlmIHBlYWsgPT0iMCI6CgkJbWVudSgpCgllbHNlOgoJCXByaW50ICJcMDMzWzE7OTZtWyFdIFx4MWJbMTs5MW1Jc2kgeWFuZyBiZW5hciIKCQlwaWxpaF9zdXBlcigpCgkKCXByaW50ICJcMDMzWzE7OTZtWytdIFwwMzNbMzI7MW1Ub3RhbCBJRCBcMDMzWzE7OTFtOiBcMDMzWzA7MW0iK3N0cihsZW4oaWQpKQoJdGl0aWsgPSBbJy4gICAnLCcuLiAgJywnLi4uICddCglmb3IgbyBpbiB0aXRpazoKCQlwcmludCgiXHJcMDMzWzE7OTZtW1wwMzNbMTs5N23inJNcMDMzWzE7OTZtXSBcMDMzWzMyOzFtQ3JhY2sgXDAzM1sxOzk3bSIrbyksO3N5cy5zdGRvdXQuZmx1c2goKTt0aW1lLnNsZWVwKDEpCglwcmludAoJcHJpbnQoJ1x4MWJbMTs5Nm1bIV0gXHgxYlswOzFtU2FiYXIgT20sT3JhbmcgU2FiYXIgRGkgU2F5YW5nIEphbmRhJykKCXByaW50IDQyKiJcMDMzWzE7OTZtPSIKCQoJCQkKCWRlZiBtYWluKGFyZyk6CgkJZ2xvYmFsIGNla3BvaW50LG9rcwoJCXVzZXIgPSBhcmcKCQl0cnk6CgkJCW9zLm1rZGlyKCdvdXQnKQoJCWV4Y2VwdCBPU0Vycm9yOgoJCQlwYXNzCgkJdHJ5OgoJCQlhID0gcmVxdWVzdHMuZ2V0KCdodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8nK3VzZXIrJy8/YWNjZXNzX3Rva2VuPScrdG9rZXQpCgkJCWIgPSBqc29uLmxvYWRzKGEudGV4dCkKCQkJcGFzczEgPSBiWydmaXJzdF9uYW1lJ10rJzEyMycKCQkJZGF0YSA9IHVybGxpYi51cmxvcGVuKCJodHRwczovL2ItYXBpLmZhY2Vib29rLmNvbS9tZXRob2QvYXV0aC5sb2dpbj9hY2Nlc3NfdG9rZW49MjM3NzU5OTA5NTkxNjU1JTI1MjU3QzBmMTQwYWFiZWRmYjY1YWMyN2E3MzllZDFhMjI2M2IxJmZvcm1hdD1qc29uJnNka192ZXJzaW9uPTImZW1haWw9IisodXNlcikrIiZsb2NhbGU9ZW5fVVMmcGFzc3dvcmQ9IisocGFzczEpKyImc2RrPWlvcyZnZW5lcmF0ZV9zZXNzaW9uX2Nvb2tpZXM9MSZzaWc9M2Y1NTVmOTlmYjYxZmNkN2FhMGM0NGY1OGY1MjJlZjYiKQoJCQlxID0ganNvbi5sb2FkKGRhdGEpCgkJCWlmICdhY2Nlc3NfdG9rZW4nIGluIHE6CgkJCQlwcmludCAnXHgxYlszMzsxbVtDcCtdIFx4MWJbMDsxbUlEIFx4MWJbMTs5MW0gICAgICA6IFx4MWJbMDsxbScgKyB1c2VyCgkJCQlwcmludCAnXHgxYlszMzsxbVshXSBceDFiWzA7MW1QYXNzd29yZCBceDFiWzE7OTFtOiBceDFiWzA7MW0nICsgcGFzczEgKyAnXG4nCgkJCQlva3MuYXBwZW5kKHVzZXIrcGFzczEpCgkJCWVsc2U6CgkJCQlpZiAnd3d3LmZhY2Vib29rLmNvbScgaW4gcVsiZXJyb3JfbXNnIl06CgkJCQkJcHJpbnQgJ1x4MWJbMzI7MW1bT0vinJNdIFx4MWJbMDsxbUlEIFx4MWJbMTs5MW0gICAgICA6IFx4MWJbMDsxbScgKyB1c2VyCgkJCQkJcHJpbnQgJ1x4MWJbMzI7MW1b4oiaXSBceDFiWzA7MW1QYXNzd29yZCBceDFiWzE7OTFtOiBceDFiWzA7MW0nICsgcGFzczEgKyAnXG4nCgkJCQkJY2VrID0gb3Blbigib3V0L3N1cGVyX2NwLnR4dCIsICJhIikKCQkJCQljZWsud3JpdGUoIklEOiIgK3VzZXIrICIgUHc6IiArcGFzczErIlxuIikKCQkJCQljZWsuY2xvc2UoKQoJCQkJCWNla3BvaW50LmFwcGVuZCh1c2VyK3Bhc3MxKQoJCQkJZWxzZToKCQkJCQlwYXNzMiA9IGJbJ2ZpcnN0X25hbWUnXSsnMTIzNDUnCgkJCQkJZGF0YSA9IHVybGxpYi51cmxvcGVuKCJodHRwczovL2ItYXBpLmZhY2Vib29rLmNvbS9tZXRob2QvYXV0aC5sb2dpbj9hY2Nlc3NfdG9rZW49MjM3NzU5OTA5NTkxNjU1JTI1MjU3QzBmMTQwYWFiZWRmYjY1YWMyN2E3MzllZDFhMjI2M2IxJmZvcm1hdD1qc29uJnNka192ZXJzaW9uPTImZW1haWw9IisodXNlcikrIiZsb2NhbGU9ZW5fVVMmcGFzc3dvcmQ9IisocGFzczIpKyImc2RrPWlvcyZnZW5lcmF0ZV9zZXNzaW9uX2Nvb2tpZXM9MSZzaWc9M2Y1NTVmOTlmYjYxZmNkN2FhMGM0NGY1OGY1MjJlZjYiKQoJCQkJCXEgPSBqc29uLmxvYWQoZGF0YSkKCQkJCQlpZiAnYWNjZXNzX3Rva2VuJyBpbiBxOgoJCQkJCQlwcmludCAnXHgxYlszMzsxbVtDUCtdIFx4MWJbMDsxbUlEIFx4MWJbMTs5MW0gICAgICA6IFx4MWJbMDsxbScgKyB1c2VyCgkJCQkJCXByaW50ICdceDFiWzMzOzFtWyFdIFx4MWJbMDsxbVBhc3N3b3JkIFx4MWJbMTs5MW06IFx4MWJbMDsxbScgKyBwYXNzMiArICdcbicKCQkJCQkJb2tzLmFwcGVuZCh1c2VyK3Bhc3MyKQoJCQkJCWVsc2U6CgkJCQkJCWlmICd3d3cuZmFjZWJvb2suY29tJyBpbiBxWyJlcnJvcl9tc2ciXToKCQkJCQkJCXByaW50ICdceDFiWzMyOzFtW09L4pyTXSBceDFiWzA7MW1JRCBceDFiWzE7OTFtICAgICAgOiBceDFiWzA7MW0nICsgdXNlcgoJCQkJCQkJcHJpbnQgJ1x4MWJbMzI7MW1b4oiaXSBceDFiWzA7MW1QYXNzd29yZCBceDFiWzE7OTFtOiBceDFiWzA7MW0nICsgcGFzczIgKyAnXG4nCgkJCQkJCQljZWsgPSBvcGVuKCJvdXQvc3VwZXJfY3AudHh0IiwgImEiKQoJCQkJCQkJY2VrLndyaXRlKCJJRDoiICt1c2VyKyAiIFB3OiIgK3Bhc3MyKyJcbiIpCgkJCQkJCQljZWsuY2xvc2UoKQoJCQkJCQkJY2VrcG9pbnQuYXBwZW5kKHVzZXIrcGFzczIpCgkJCQkJCWVsc2U6CgkJCQkJCQlwYXNzMyA9IGJbJ2xhc3RfbmFtZSddICsgJzEyMycKCQkJCQkJCWRhdGEgPSB1cmxsaWIudXJsb3BlbigiaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4/YWNjZXNzX3Rva2VuPTIzNzc1OTkwOTU5MTY1NSUyNTI1N0MwZjE0MGFhYmVkZmI2NWFjMjdhNzM5ZWQxYTIyNjNiMSZmb3JtYXQ9anNvbiZzZGtfdmVyc2lvbj0yJmVtYWlsPSIrKHVzZXIpKyImbG9jYWxlPWVuX1VTJnBhc3N3b3JkPSIrKHBhc3MzKSsiJnNkaz1pb3MmZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzPTEmc2lnPTNmNTU1Zjk5ZmI2MWZjZDdhYTBjNDRmNThmNTIyZWY2IikKCQkJCQkJCXEgPSBqc29uLmxvYWQoZGF0YSkKCQkJCQkJCWlmICdhY2Nlc3NfdG9rZW4nIGluIHE6CgkJCQkJCQkJcHJpbnQgJ1x4MWJbMzM7MW1bQ1ArXSBceDFiWzA7MW1JRCBceDFiWzE7OTFtICAgICAgOiBceDFiWzA7MW0nICsgdXNlcgoJCQkJCQkJCXByaW50ICdceDFiWzMzOzFtWyFdIFx4MWJbMDsxbVBhc3N3b3JkIFx4MWJbMTs5MW06IFx4MWJbMDsxbScgKyBwYXNzMyArICdcbicKCQkJCQkJCQlva3MuYXBwZW5kKHVzZXIrcGFzczMpCgkJCQkJCQllbHNlOgoJCQkJCQkJCWlmICd3d3cuZmFjZWJvb2suY29tJyBpbiBxWyJlcnJvcl9tc2ciXToKCQkJCQkJCQkJcHJpbnQgJ1x4MWJbMzI7MW1bT0vinJNdIFx4MWJbMDsxbUlEIFx4MWJbMTs5MW0gICAgICA6IFx4MWJbMDsxbScgKyB1c2VyCgkJCQkJCQkJCXByaW50ICdceDFiWzMyOzFtW+KIml0gXHgxYlswOzFtUGFzc3dvcmQgXHgxYlsxOzkxbTogXHgxYlswOzFtJyArIHBhc3MzICsgJ1xuJwoJCQkJCQkJCQljZWsgPSBvcGVuKCJvdXQvc3VwZXJfY3AudHh0IiwgImEiKQoJCQkJCQkJCQljZWsud3JpdGUoIklEOiIgK3VzZXIrICIgUHc6IiArcGFzczMrIlxuIikKCQkJCQkJCQkJY2VrLmNsb3NlKCkKCQkJCQkJCQkJY2VrcG9pbnQuYXBwZW5kKHVzZXIrcGFzczMpCgkJCQkJCQkJZWxzZToKCQkJCQkJCQkJcGFzczQgPSAnc2F5YW5nJwoJCQkJCQkJCQlkYXRhID0gdXJsbGliLnVybG9wZW4oImh0dHBzOi8vYi1hcGkuZmFjZWJvb2suY29tL21ldGhvZC9hdXRoLmxvZ2luP2FjY2Vzc190b2tlbj0yMzc3NTk5MDk1OTE2NTUlMjUyNTdDMGYxNDBhYWJlZGZiNjVhYzI3YTczOWVkMWEyMjYzYjEmZm9ybWF0PWpzb24mc2RrX3ZlcnNpb249MiZlbWFpbD0iKyh1c2VyKSsiJmxvY2FsZT1lbl9VUyZwYXNzd29yZD0iKyhwYXNzNCkrIiZzZGs9aW9zJmdlbmVyYXRlX3Nlc3Npb25fY29va2llcz0xJnNpZz0zZjU1NWY5OWZiNjFmY2Q3YWEwYzQ0ZjU4ZjUyMmVmNiIpCgkJCQkJCQkJCXEgPSBqc29uLmxvYWQoZGF0YSkKCQkJCQkJCQkJaWYgJ2FjY2Vzc190b2tlbicgaW4gcToKCQkJCQkJCQkJCXByaW50ICdceDFiWzMzOzFtW2NwK10gXHgxYlswOzFtSUQgXHgxYlsxOzkxbSAgICAgIDogXHgxYlswOzFtJyArIHVzZXIKCQkJCQkJCQkJCXByaW50ICdceDFiWzMzOzFtW+KeuV0gXHgxYlswOzFtUGFzc3dvcmQgXHgxYlsxOzkxbTogXHgxYlswOzFtJyArIHBhc3M0ICsgJ1xuJwoJCQkJCQkJCQkJb2tzLmFwcGVuZCh1c2VyK3Bhc3M0KQoJCQkJCQkJCQllbHNlOgoJCQkJCQkJCQkJaWYgJ3d3dy5mYWNlYm9vay5jb20nIGluIHFbImVycm9yX21zZyJdOgoJCQkJCQkJCQkJCXByaW50ICdceDFiWzMyOzFtW09L4pyTXSBceDFiWzA7MW1JRCBceDFiWzE7OTFtICAgICAgOiBceDFiWzA7MW0nICsgdXNlcgoJCQkJCQkJCQkJCXByaW50ICdceDFiWzMyOzFtW+KIml0gXHgxYlswOzFtUGFzc3dvcmQgXHgxYlsxOzkxbTogXHgxYlswOzFtJyArIHBhc3M0ICsgJ1xuJwoJCQkJCQkJCQkJCWNlayA9IG9wZW4oIm91dC9zdXBlcl9jcC50eHQiLCAiYSIpCgkJCQkJCQkJCQkJY2VrLndyaXRlKCJJRDoiICt1c2VyKyAiIFB3OiIgK3Bhc3M0KyJcbiIpCgkJCQkJCQkJCQkJY2VrLmNsb3NlKCkKCQkJCQkJCQkJCQljZWtwb2ludC5hcHBlbmQodXNlcitwYXNzNCkKCQkJCQkJCQkJCWVsc2U6CgkJCQkJCQkJCQkJYmlydGhkYXkgPSBiWydiaXJ0aGRheSddCgkJCQkJCQkJCQkJcGFzczUgPSBiaXJ0aGRheS5yZXBsYWNlKCcvJywgJycpCgkJCQkJCQkJCQkJZGF0YSA9IHVybGxpYi51cmxvcGVuKCJodHRwczovL2ItYXBpLmZhY2Vib29rLmNvbS9tZXRob2QvYXV0aC5sb2dpbj9hY2Nlc3NfdG9rZW49MjM3NzU5OTA5NTkxNjU1JTI1MjU3QzBmMTQwYWFiZWRmYjY1YWMyN2E3MzllZDFhMjI2M2IxJmZvcm1hdD1qc29uJnNka192ZXJzaW9uPTImZW1haWw9IisodXNlcikrIiZsb2NhbGU9ZW5fVVMmcGFzc3dvcmQ9IisocGFzczUpKyImc2RrPWlvcyZnZW5lcmF0ZV9zZXNzaW9uX2Nvb2tpZXM9MSZzaWc9M2Y1NTVmOTlmYjYxZmNkN2FhMGM0NGY1OGY1MjJlZjYiKQoJCQkJCQkJCQkJCXEgPSBqc29uLmxvYWQoZGF0YSkKCQkJCQkJCQkJCQlpZiAnYWNjZXNzX3Rva2VuJyBpbiBxOgoJCQkJCQkJCQkJCQlwcmludCAnXHgxYlszMzsxbVtjcF0gXHgxYlswOzFtSUQgXHgxYlsxOzkxbSAgICAgIDogXHgxYlswOzFtJyArIHVzZXIKCQkJCQkJCQkJCQkJcHJpbnQgJ1x4MWJbMzM7MW1bIV0gXHgxYlswOzFtUGFzc3dvcmQgXHgxYlsxOzkxbTogXHgxYlswOzFtJyArIHBhc3M1ICsgJ1xuJwoJCQkJCQkJCQkJCQlva3MuYXBwZW5kKHVzZXIrcGFzczUpCgkJCQkJCQkJCQkJZWxzZToKCQkJCQkJCQkJCQkJaWYgJ3d3dy5mYWNlYm9vay5jb20nIGluIHFbImVycm9yX21zZyJdOgoJCQkJCQkJCQkJCQkJcHJpbnQgJ1x4MWJbMzI7MW1bT0vinJNdIFx4MWJbMDsxbUlEIFx4MWJbMTs5MW0gICAgICA6IFx4MWJbMDsxbScgKyB1c2VyCgkJCQkJCQkJCQkJCQlwcmludCAnXHgxYlszMjsxbVviiJpdIFx4MWJbMDsxbVBhc3N3b3JkIFx4MWJbMTs5MW06IFx4MWJbMDsxbScgKyBwYXNzNSArICdcbicKCQkJCQkJCQkJCQkJCWNlayA9IG9wZW4oIm91dC9zdXBlcl9jcC50eHQiLCAiYSIpCgkJCQkJCQkJCQkJCQljZWsud3JpdGUoIklEOiIgK3VzZXIrICIgUHc6IiArcGFzczUrIlxuIikKCQkJCQkJCQkJCQkJCWNlay5jbG9zZSgpCgkJCQkJCQkJCQkJCQljZWtwb2ludC5hcHBlbmQodXNlcitwYXNzNSkKCQkJCQkJCQkJCQkJZWxzZToKCQkJCQkJCQkJCQkJCXBhc3M2ID0gJ2RvcmFlbW9uJwoJCQkJCQkJCQkJCQkJZGF0YSA9IHVybGxpYi51cmxvcGVuKCJodHRwczovL2ItYXBpLmZhY2Vib29rLmNvbS9tZXRob2QvYXV0aC5sb2dpbj9hY2Nlc3NfdG9rZW49MjM3NzU5OTA5NTkxNjU1JTI1MjU3QzBmMTQwYWFiZWRmYjY1YWMyN2E3MzllZDFhMjI2M2IxJmZvcm1hdD1qc29uJnNka192ZXJzaW9uPTImZW1haWw9IisodXNlcikrIiZsb2NhbGU9ZW5fVVMmcGFzc3dvcmQ9IisocGFzczYpKyImc2RrPWlvcyZnZW5lcmF0ZV9zZXNzaW9uX2Nvb2tpZXM9MSZzaWc9M2Y1NTVmOTlmYjYxZmNkN2FhMGM0NGY1OGY1MjJlZjYiKQoJCQkJCQkJCQkJCQkJcSA9IGpzb24ubG9hZChkYXRhKQoJCQkJCQkJCQkJCQkJaWYgJ2FjY2Vzc190b2tlbicgaW4gcToKCQkJCQkJCQkJCQkJCQlwcmludCAnXHgxYlszMzsxbVtjcF0gXHgxYlswOzFtSUQgXHgxYlsxOzkxbSAgICAgIDogXHgxYlswOzFtJyArIHVzZXIKCQkJCQkJCQkJCQkJCQlwcmludCAnXHgxYlszMzsxbVshXSBceDFiWzA7MW1QYXNzd29yZCBceDFiWzE7OTFtOiBceDFiWzA7MW0nICsgcGFzczYgKyAnXG4nCgkJCQkJCQkJCQkJCQkJb2tzLmFwcGVuZCh1c2VyK3Bhc3M2KQoJCQkJCQkJCQkJCQkJZWxzZToKCQkJCQkJCQkJCQkJCQlpZiAnd3d3LmZhY2Vib29rLmNvbScgaW4gcVsiZXJyb3JfbXNnIl06CgkJCQkJCQkJCQkJCQkJCXByaW50ICdceDFiWzMyOzFtW09L4pyTXSBceDFiWzA7MW1JRCBceDFiWzE7OTFtICAgICAgOiBceDFiWzA7MW0nICsgdXNlcgoJCQkJCQkJCQkJCQkJCQlwcmludCAnXHgxYlszMjsxbVviiJpdIFx4MWJbMDsxbVBhc3N3b3JkIFx4MWJbMTs5MW06IFx4MWJbMDsxbScgKyBwYXNzNiArICdcbicKCQkJCQkJCQkJCQkJCQkJY2VrID0gb3Blbigib3V0L3N1cGVyX2NwLnR4dCIsICJhIikKCQkJCQkJCQkJCQkJCQkJY2VrLndyaXRlKCJJRDoiICt1c2VyKyAiIFB3OiIgK3Bhc3M2KyJcbiIpCgkJCQkJCQkJCQkJCQkJCWNlay5jbG9zZSgpCgkJCQkJCQkJCQkJCQkJCWNla3BvaW50LmFwcGVuZCh1c2VyK3Bhc3M2KQoJCWV4Y2VwdDoKCQkJcGFzcwoJCQoJcCA9IFRocmVhZFBvb2woMzApCglwLm1hcChtYWluLCBpZCkKCXByaW50ICdcMDMzWzE7OTZtW1wwMzNbMTs5N23inJNcMDMzWzE7OTZtXSBcMDMzWzE7OTJtU2VsZXNhaSBcMDMzWzE7OTdtLi4uLicKCXByaW50IlwwMzNbMTs5Nm1bK10gXDAzM1szMzsxbVRvdGFsIENQL1x4MWJbMzI7MW1PSyBcMDMzWzE7OTFtOiBcMDMzWzE7OTJtIitzdHIobGVuKG9rcykpKyJcMDMzWzE7OTdtL1wwMzNbMTs5M20iK3N0cihsZW4oY2VrcG9pbnQpKQoJcHJpbnQoIlwwMzNbMTs5Nm1bK10gXDAzM1sxOzkybUNQIEZpbGUgdGVyc2ltcGFuIFwwMzNbMTs5MW06IFwwMzNbMTs5N21vdXQvc3VwZXJfY3AudHh0IikKCXJhd19pbnB1dCgiXG5cMDMzWzE7OTZtW1wwMzNbMTs5N21LZW1iYWxpXDAzM1sxOzk2bV0iKQoJc3VwZXIoKQoKCmRlZiBncnVwc2F5YSgpOgoJb3Muc3lzdGVtKCdjbGVhcicpCgl0cnk6CgkJdG9rZXQ9b3BlbignbG9naW4udHh0JywncicpLnJlYWQoKQoJZXhjZXB0IElPRXJyb3I6CgkJcHJpbnQiXDAzM1sxOzk2bVshXSBceDFiWzE7OTFtVG9rZW4gaW52YWxpZCIKCQlvcy5zeXN0ZW0oJ3JtIC1yZiBsb2dpbi50eHQnKQoJCXRpbWUuc2xlZXAoMSkKCQlrZWx1YXIoKQoJdHJ5OgoJCW9zLm1rZGlyKCdvdXQnKQoJZXhjZXB0IE9TRXJyb3I6CgkJcGFzcwoJb3Muc3lzdGVtKCdjbGVhcicpCglwcmludCBsb2dvCglwcmludCA0MioiXDAzM1sxOzk2bT0iCgl0cnk6CgkJdWggPSByZXF1ZXN0cy5nZXQoJ2h0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tL21lL2dyb3Vwcz9hY2Nlc3NfdG9rZW49Jyt0b2tldCkKCQlndWQgPSBqc29uLmxvYWRzKHVoLnRleHQpCgkJZm9yIHAgaW4gZ3VkWydkYXRhJ106CgkJCW5hbWEgPSBwWyJuYW1lIl0KCQkJaWQgPSBwWyJpZCJdCgkJCWY9b3Blbignb3V0L0dydXBpZC50eHQnLCd3JykKCQkJbGlzdGdydXAuYXBwZW5kKGlkKQoJCQlmLndyaXRlKGlkICsgJ1xuJykKCQkJcHJpbnQoIlwwMzNbMTs5Nm1b4pyTXSBcMDMzWzE7OTJtR1JPVVAgU0FZQSIpCgkJCXByaW50KCJcMDMzWzE7OTZtW+KeuV0gXDAzM1sxOzk3bUlEICBcMDMzWzE7OTFtOiBcMDMzWzE7OTJtIitzdHIoaWQpKQoJCQlwcmludCgiXDAzM1sxOzk2bVvinrldIFwwMzNbMTs5N21OYW1hXDAzM1sxOzkxbTogXDAzM1sxOzkybSIrc3RyKG5hbWEpICsgJ1xuJykKCQlwcmludCA0MioiXDAzM1sxOzk2bT0iCgkJcHJpbnQiXDAzM1sxOzk2bVsrXSBcMDMzWzE7OTJtVG90YWwgR3JvdXAgXDAzM1sxOzkxbTpcMDMzWzE7OTdtICVzIiUobGVuKGxpc3RncnVwKSkKCQlwcmludCgiXDAzM1sxOzk2bVsrXSBcMDMzWzE7OTJtVGVyc2ltcGFuIFwwMzNbMTs5MW06IFwwMzNbMTs5N21vdXQvR3J1cGlkLnR4dCIpCgkJZi5jbG9zZSgpCgkJcmF3X2lucHV0KCJcblwwMzNbMTs5Nm1bXDAzM1sxOzk3bUtlbWJhbGlcMDMzWzE7OTZtXSIpCgkJbWVudSgpCglleGNlcHQgKEtleWJvYXJkSW50ZXJydXB0LEVPRkVycm9yKToKCQlwcmludCgiXDAzM1sxOzk2bVshXSBceDFiWzE7OTFtVGVyaGVudGkiKQoJCXJhd19pbnB1dCgiXG5cMDMzWzE7OTZtW1wwMzNbMTs5N21LZW1iYWxpXDAzM1sxOzk2bV0iKQoJCW1lbnUoKQoJZXhjZXB0IEtleUVycm9yOgoJCW9zLnJlbW92ZSgnb3V0L0dydXBpZC50eHQnKQoJCXByaW50KCdcMDMzWzE7OTZtWyFdIFx4MWJbMTs5MW1Hcm91cCB0aWRhayBkaXRlbXVrYW4nKQoJCXJhd19pbnB1dCgiXG5cMDMzWzE7OTZtW1wwMzNbMTs5N21LZW1iYWxpXDAzM1sxOzk2bV0iKQoJCW1lbnUoKQoJZXhjZXB0IHJlcXVlc3RzLmV4Y2VwdGlvbnMuQ29ubmVjdGlvbkVycm9yOgoJCXByaW50IlwwMzNbMTs5Nm1b4pyWXSBceDFiWzE7OTFtVGlkYWsgYWRhIGtvbmVrc2kiCgkJa2VsdWFyKCkKCWV4Y2VwdCBJT0Vycm9yOgoJCXByaW50ICJcMDMzWzE7OTZtWyFdIFx4MWJbMTs5MW1FcnJvciIKCQlyYXdfaW5wdXQoIlxuXDAzM1sxOzk2bVtcMDMzWzE7OTdtS2VtYmFsaVwwMzNbMTs5Nm1dIikKCQltZW51KCkKCmRlZiBpbmZvcm1hc2koKToKCW9zLnN5c3RlbSgnY2xlYXInKQoJdHJ5OgoJCXRva2V0PW9wZW4oJ2xvZ2luLnR4dCcsJ3InKS5yZWFkKCkKCWV4Y2VwdCBJT0Vycm9yOgoJCXByaW50IlwwMzNbMTs5MW1bIV0gVG9rZW4gaW52YWxpZCIKCQlvcy5zeXN0ZW0oJ3JtIC1yZiBsb2dpbi50eHQnKQoJCXRpbWUuc2xlZXAoMSkKCQlrZWx1YXIoKQoJb3Muc3lzdGVtKCdjbGVhcicpCglwcmludCBsb2dvCglwcmludCA0MioiXDAzM1sxOzk2bT0iCglhaWQgPSByYXdfaW5wdXQoJ1wwMzNbMTs5Nm1bK10gXDAzM1sxOzkzbU1hc3VrYW4gSUQvTmFtYVwwMzNbMTs5MW0gOiBcMDMzWzE7OTdtJykKCWphbGFuKCdcMDMzWzE7OTZtW+Kcul0gXDAzM1sxOzkzbVR1bmdndSBzZWJlbnRhciBcMDMzWzE7OTdtLi4uJykKCXIgPSByZXF1ZXN0cy5nZXQoJ2h0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tL21lL2ZyaWVuZHM/YWNjZXNzX3Rva2VuPScrdG9rZXQpCgljb2sgPSBqc29uLmxvYWRzKHIudGV4dCkKCWZvciBpIGluIGNva1snZGF0YSddOgoJCWlmIGFpZCBpbiBpWyduYW1lJ10gb3IgYWlkIGluIGlbJ2lkJ106CgkJCXggPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLyIraVsnaWQnXSsiP2FjY2Vzc190b2tlbj0iK3Rva2V0KQoJCQl6ID0ganNvbi5sb2Fkcyh4LnRleHQpCgkJCXByaW50IDQzKiJcMDMzWzE7OTZtPSIKCQkJdHJ5OgoJCQkJcHJpbnQgJ1wwMzNbMTs5Nm1b4p65XSBcMDMzWzE7OTNtTmFtYVwwMzNbMTs5N20gICAgICAgICAgOiAnK3pbJ25hbWUnXQoJCQlleGNlcHQgS2V5RXJyb3I6IHByaW50ICdcMDMzWzE7OTZtWz9dIFwwMzNbMTs5M21OYW1hXDAzM1sxOzk3bSAgICAgICAgICA6IFwwMzNbMTs5MW1UaWRhayBhZGEnCgkJCXRyeToKCQkJCXByaW50ICdcMDMzWzE7OTZtW+KeuV0gXDAzM1sxOzkzbUlEXDAzM1sxOzk3bSAgICAgICAgICAgIDogJyt6WydpZCddCgkJCWV4Y2VwdCBLZXlFcnJvcjogcHJpbnQgJ1wwMzNbMTs5Nm1bP10gXDAzM1sxOzkzbUlEXDAzM1sxOzk3bSAgICAgICAgICAgIDogXDAzM1sxOzkxbVRpZGFrIGFkYScKCQkJdHJ5OgoJCQkJcHJpbnQgJ1wwMzNbMTs5Nm1b4p65XSBcMDMzWzE7OTNtRW1haWxcMDMzWzE7OTdtICAgICAgICAgOiAnK3pbJ2VtYWlsJ10KCQkJZXhjZXB0IEtleUVycm9yOiBwcmludCAnXDAzM1sxOzk2bVs/XSBcMDMzWzE7OTNtRW1haWxcMDMzWzE7OTdtICAgICAgICAgOiBcMDMzWzE7OTFtVGlkYWsgYWRhJwoJCQl0cnk6CgkJCQlwcmludCAnXDAzM1sxOzk2bVvinrldIFwwMzNbMTs5M21ObyBIUFwwMzNbMTs5N20gICAgICAgICA6ICcrelsnbW9iaWxlX3Bob25lJ10KCQkJZXhjZXB0IEtleUVycm9yOiBwcmludCAnXDAzM1sxOzk2bVs/XSBcMDMzWzE7OTNtTm8gSFBcMDMzWzE7OTdtICAgICAgICAgOiBcMDMzWzE7OTFtVGlkYWsgYWRhJwoJCQl0cnk6CgkJCQlwcmludCAnXDAzM1sxOzk2bVvinrldIFwwMzNbMTs5M21UZW1wYXQgdGluZ2dhbFwwMzNbMTs5N206ICcrelsnbG9jYXRpb24nXVsnbmFtZSddCgkJCWV4Y2VwdCBLZXlFcnJvcjogcHJpbnQgJ1wwMzNbMTs5Nm1bP10gXDAzM1sxOzkzbVRlbXBhdCB0aW5nZ2FsXDAzM1sxOzk3bTogXDAzM1sxOzkxbVRpZGFrIGFkYScKCQkJdHJ5OgoJCQkJcHJpbnQgJ1wwMzNbMTs5Nm1b4p65XSBcMDMzWzE7OTNtVGFuZ2dhbCBsYWhpclwwMzNbMTs5N20gOiAnK3pbJ2JpcnRoZGF5J10KCQkJZXhjZXB0IEtleUVycm9yOiBwcmludCAnXDAzM1sxOzk2bVs/XSBcMDMzWzE7OTNtVGFuZ2dhbCBsYWhpclwwMzNbMTs5N20gOiBcMDMzWzE7OTFtVGlkYWsgYWRhJwoJCQl0cnk6CgkJCQlwcmludCAnXDAzM1sxOzk2bVvinrldIFwwMzNbMTs5M21TZWtvbGFoXDAzM1sxOzk3bSAgICAgICA6ICcKCQkJCWZvciBxIGluIHpbJ2VkdWNhdGlvbiddOgoJCQkJCXRyeToKCQkJCQkJcHJpbnQgJ1wwMzNbMTs5MW0gICAgICAgICAgICAgICAgICAgfiBcMDMzWzE7OTdtJytxWydzY2hvb2wnXVsnbmFtZSddCgkJCQkJZXhjZXB0IEtleUVycm9yOiBwcmludCAnXDAzM1sxOzkxbSAgICAgICAgICAgICAgICAgICB+IFwwMzNbMTs5MW1UaWRhayBhZGEnCgkJCWV4Y2VwdCBLZXlFcnJvcjogcGFzcwoJCQlyYXdfaW5wdXQoIlxuXDAzM1sxOzk2bVtcMDMzWzE7OTdtS2VtYmFsaVwwMzNbMTs5Nm1dIikKCQkJbWVudSgpCgkJZWxzZToKCQkJcGFzcwoJZWxzZToKCQlwcmludCJcMDMzWzE7OTZtW+Kcll0gXHgxYlsxOzkxbUFrdW4gdGlkYWsgZGl0ZW11a2FuIgoJCXJhd19pbnB1dCgiXG5cMDMzWzE7OTZtW1wwMzNbMTs5N21LZW1iYWxpXDAzM1sxOzk2bV0iKQoJCW1lbnUoKQoKZGVmIHlhaG9vKCk6CglnbG9iYWwgdG9rZXQKCW9zLnN5c3RlbSgnY2xlYXInKQoJdHJ5OgoJCXRva2V0PW9wZW4oJ2xvZ2luLnR4dCcsJ3InKS5yZWFkKCkKCWV4Y2VwdCBJT0Vycm9yOgoJCXByaW50IlwwMzNbMTs5MW1bIV0gVG9rZW4gaW52YWxpZCIKCQlvcy5zeXN0ZW0oJ3JtIC1yZiBsb2dpbi50eHQnKQoJCXRpbWUuc2xlZXAoMSkKCQlrZWx1YXIoKQoJb3Muc3lzdGVtKCdjbGVhcicpCglwcmludCBsb2dvCglwcmludCA0MioiXDAzM1sxOzk2bT0iCglwcmludCAiXDAzM1sxOzk3beKVkS0tXDAzM1sxOzkxbT4gXDAzM1sxOzkybTEuXDAzM1sxOzk3bSBDcmFjayBEYXJpIERhZnRhciBUZW1hbiIKCXByaW50ICJcMDMzWzE7OTdt4pWRLS1cMDMzWzE7OTFtPiBcMDMzWzE7OTJtMi5cMDMzWzE7OTdtIENyYWNrIERhcmkgVGVtYW4gRGFyaSBUZW1hbiIKICAgICAgICBwcmludCAiXDAzM1sxOzk3beKVkS0tXDAzM1sxOzkxbT4gXDAzM1sxOzkybTMuXDAzM1sxOzk3bSBDcmFjayBEYXJpIFRlbWFuIE1lbWJlciBHcnVwIgogICAgICAgIHByaW50ICJcMDMzWzE7OTdt4pWRLS1cMDMzWzE7OTFtPiBcMDMzWzE7OTJtNC5cMDMzWzE7OTdtIENyYWNrIERhcmkgRmlsZSIKCXByaW50ICJcMDMzWzE7OTdt4pWRLS1cMDMzWzE7OTFtPiBcMDMzWzE7OTFtMC5cMDMzWzE7OTdtIEtlbWJhbGkiCgljbG9uZSgpCiAgICAgICAKZGVmIGNsb25lKCk6CgllbWJ1aCA9IHJhd19pbnB1dCgiXDAzM1sxOzk3beKVmuKVkFwwMzNbMTs5MW0+Pj4gXDAzM1sxOzk3bSIpCglpZiBlbWJ1aCA9PSIiOgoJCXByaW50ICJcMDMzWzE7OTZtWyFdIFx4MWJbMTs5MW1Jc2kgeWFuZyBiZW5hciIKCWVsaWYgZW1idWggPT0iMSI6CgkJY2xvbmVfZGFyaV9kYWZ0YXJfdGVtYW4oKQoJZWxpZiBlbWJ1aCA9PSIyIjoKCQljbG9uZV9kYXJpX3RlbWFuKCkKCWVsaWYgZW1idWggPT0iMyI6CgkJY2xvbmVfZGFyaV9tZW1iZXJfZ3JvdXAoKQoJZWxpZiBlbWJ1aCA9PSI0IjoKCQljbG9uZV9kYXJpX2ZpbGUoKQoJZWxpZiBlbWJ1aCA9PSIwIjoKCQltZW51KCkKCWVsc2U6CgkJcHJpbnQgIlwwMzNbMTs5Nm1bIV0gXHgxYlsxOzkxbUlzaSB5YW5nIGJlbmFyIgoJCQoKZGVmIGNsb25lX2RhcmlfZGFmdGFyX3RlbWFuKCk6CglnbG9iYWwgdG9rZXQKCW9zLnN5c3RlbSgncmVzZXQnKQoJdHJ5OgoJCXRva2V0PW9wZW4oJ2xvZ2luLnR4dCcsJ3InKS5yZWFkKCkKCWV4Y2VwdCBJT0Vycm9yOgoJCXByaW50IlwwMzNbMTs5MW1bIV0gVG9rZW4gSW52YWxpZCIKCQlvcy5zeXN0ZW0oJ3JtIC1yZiBsb2dpbi50eHQnKQoJCXRpbWUuc2xlZXAoMSkKCQlrZWx1YXIoKQoJdHJ5OgoJCW9zLm1rZGlyKCdvdXQnKQoJZXhjZXB0IE9TRXJyb3I6CgkJcGFzcwoJb3Muc3lzdGVtKCdjbGVhcicpCglwcmludCBsb2dvCgltcHNoID0gW10KCWptbCA9IDAKCXByaW50IDQyKiJcMDMzWzE7OTZtPSIKCWphbGFuKCdcMDMzWzE7OTZtW1x4MWJbMTs5N23inLpceDFiWzE7OTZtXSBcMDMzWzE7OTNtTWVuZ2FtYmlsIGVtYWlsIFwwMzNbMTs5N20uLi4nKQoJdGVtYW4gPSByZXF1ZXN0cy5nZXQoJ2h0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tL21lL2ZyaWVuZHM/YWNjZXNzX3Rva2VuPScrdG9rZXQpCglraW1hayA9IGpzb24ubG9hZHModGVtYW4udGV4dCkKCWphbGFuKCdcMDMzWzE7OTZtW1x4MWJbMTs5N23inLpceDFiWzE7OTZtXSBcMDMzWzE7OTNtU3RhcnQgXDAzM1sxOzk3bS4uLicpCglwcmludCAoJ1x4MWJbMTs5Nm1bIV0gXHgxYlsxOzkzbVN0b3AgQ1RSTCt6JykKCXByaW50IDQyKiJcMDMzWzE7OTZtPSIKCWZvciB3IGluIGtpbWFrWydkYXRhJ106CgkJam1sICs9MQoJCW1wc2guYXBwZW5kKGptbCkKCQlpZCA9IHdbJ2lkJ10KCQluYW1hID0gd1snbmFtZSddCgkJbGlua3MgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLyIraWQrIj9hY2Nlc3NfdG9rZW49Iit0b2tldCkKCQl6ID0ganNvbi5sb2FkcyhsaW5rcy50ZXh0KQoJCXRyeToKCQkJbWFpbCA9IHpbJ2VtYWlsJ10KCQkJeWFob28gPSByZS5jb21waWxlKHInQC4qJykKCQkJb3R3ID0geWFob28uc2VhcmNoKG1haWwpLmdyb3VwKCkKCQkJaWYgJ3lhaG9vLmNvbScgaW4gb3R3OgoJCQkJYnIub3BlbigiaHR0cHM6Ly9sb2dpbi55YWhvby5jb20vY29uZmlnL2xvZ2luPy5zcmM9ZnBjdHgmLmludGw9aWQmLmxhbmc9aWQtSUQmLmRvbmU9aHR0cHM6Ly9pZC55YWhvby5jb20iKQoJCQkJYnIuX2ZhY3RvcnkuaXNfaHRtbCA9IFRydWUKCQkJCWJyLnNlbGVjdF9mb3JtKG5yPTApCgkJCQliclsidXNlcm5hbWUiXSA9IG1haWwKCQkJCWtsaWsgPSBici5zdWJtaXQoKS5yZWFkKCkKCQkJCWpvayA9IHJlLmNvbXBpbGUocicibWVzc2FnZXMuRVJST1JfSU5WQUxJRF9VU0VSTkFNRSI+LionKQoJCQkJdHJ5OgoJCQkJCXBlayA9IGpvay5zZWFyY2goa2xpaykuZ3JvdXAoKQoJCQkJZXhjZXB0OgoJCQkJCWNvbnRpbnVlCgkJCQlpZiAnIm1lc3NhZ2VzLkVSUk9SX0lOVkFMSURfVVNFUk5BTUUiPicgaW4gcGVrOgoJCQkJCXByaW50KCJcMDMzWzE7OTZtW+Kck10gXDAzM1sxOzkybVZVTE4iKQoJCQkJCXByaW50KCJcMDMzWzE7OTZtW+KeuV0gXDAzM1sxOzk3bUlEICAgXDAzM1sxOzkxbTogXDAzM1sxOzkybSIraWQpCgkJCQkJcHJpbnQoIlwwMzNbMTs5Nm1b4p65XSBcMDMzWzE7OTdtRW1haWxcMDMzWzE7OTFtOiBcMDMzWzE7OTJtIittYWlsKQoJCQkJCXByaW50KCJcMDMzWzE7OTZtW+KeuV0gXDAzM1sxOzk3bU5hbWEgXDAzM1sxOzkxbTogXDAzM1sxOzkybSIrbmFtYSsgJ1xuJykKCQkJCQlzYXZlID0gb3Blbignb3V0L01haWxWdWxuLnR4dCcsJ2EnKQoJCQkJCXNhdmUud3JpdGUoIk5hbWEgOiAiKyBuYW1hICsgJ1xuJyAiSUQgICAgICAgIDogIisgaWQgKyAnXG4nICJFbWFpbCAgOiAiKyBtYWlsICsgJ1xuXG4nKQoJCQkJCXNhdmUuY2xvc2UoKQoJCQkJCWJlcmhhc2lsLmFwcGVuZChtYWlsKQoJCWV4Y2VwdCBLZXlFcnJvcjoKCQkJcGFzcwoJcHJpbnQgNDIqIlwwMzNbMTs5Nm09IgoJcHJpbnQgJ1wwMzNbMTs5Nm1bXDAzM1sxOzk3beKck1wwMzNbMTs5Nm1dIFwwMzNbMTs5Mm1TZWxlc2FpIFwwMzNbMTs5N20uLi4uJwoJcHJpbnQiXDAzM1sxOzk2bVsrXSBcMDMzWzE7OTJtVG90YWwgXDAzM1sxOzkxbTogXDAzM1sxOzk3bSIrc3RyKGxlbihiZXJoYXNpbCkpCglwcmludCJcMDMzWzE7OTZtWytdIFwwMzNbMTs5Mm1GaWxlIHRlcnNpbXBhbiBcMDMzWzE7OTFtOlwwMzNbMTs5N20gb3V0L01haWxWdWxuLnR4dCIKCXJhd19pbnB1dCgiXG5cMDMzWzE7OTZtW1wwMzNbMTs5N21LZW1iYWxpXDAzM1sxOzk2bV0iKQoJbWVudSgpCgkJCgpkZWYgY2xvbmVfZGFyaV90ZW1hbigpOgoJZ2xvYmFsIHRva2V0Cglvcy5zeXN0ZW0oJ2NsZWFyJykKCXRyeToKCQl0b2tldD1vcGVuKCdsb2dpbi50eHQnLCdyJykucmVhZCgpCglleGNlcHQgSU9FcnJvcjoKCQlwcmludCJcMDMzWzE7OTZtWyFdIFx4MWJbMTs5MW1Ub2tlbiBpbnZhbGlkIgoJCW9zLnN5c3RlbSgncm0gLXJmIGxvZ2luLnR4dCcpCgkJdGltZS5zbGVlcCgxKQoJCWtlbHVhcigpCgl0cnk6CgkJb3MubWtkaXIoJ291dCcpCglleGNlcHQgT1NFcnJvcjoKCQlwYXNzCglvcy5zeXN0ZW0oJ2NsZWFyJykKCXByaW50IGxvZ28KCW1wc2ggPSBbXQoJam1sID0gMAoJcHJpbnQgNDIqIlwwMzNbMTs5Nm09IgoJaWR0ID0gcmF3X2lucHV0KCJcMDMzWzE7OTZtWytdIFwwMzNbMTs5M21NYXN1a2FuIElEIHRlbWFuIFwwMzNbMTs5MW06IFwwMzNbMTs5N20iKQoJdHJ5OgoJCWpvayA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vIitpZHQrIj9hY2Nlc3NfdG9rZW49Iit0b2tldCkKCQlvcCA9IGpzb24ubG9hZHMoam9rLnRleHQpCgkJcHJpbnQiXDAzM1sxOzk2bVtcMDMzWzE7OTdt4pyTXDAzM1sxOzk2bV0gXDAzM1sxOzkzbU5hbWFcMDMzWzE7OTFtIDpcMDMzWzE7OTdtICIrb3BbIm5hbWUiXQoJZXhjZXB0IEtleUVycm9yOgoJCXByaW50IlwwMzNbMTs5Nm1bIV0gXHgxYlsxOzkxbVRlbWFuIHRpZGFrIGRpdGVtdWthbiIKCQlyYXdfaW5wdXQoIlxuXDAzM1sxOzk2bVtcMDMzWzE7OTdtS2VtYmFsaVwwMzNbMTs5Nm1dIikKCQltZW51KCkKCWphbGFuKCdcMDMzWzE7OTZtW+Kcul0gXDAzM1sxOzkzbU1lbmdhbWJpbCBlbWFpbCBcMDMzWzE7OTdtLi4uJykKCXRlbWFuID0gcmVxdWVzdHMuZ2V0KCdodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8nK2lkdCsnL2ZyaWVuZHM/YWNjZXNzX3Rva2VuPScrdG9rZXQpCglraW1hayA9IGpzb24ubG9hZHModGVtYW4udGV4dCkKCWphbGFuKCdcMDMzWzE7OTZtW+Kcul0gXDAzM1sxOzkzbVN0YXJ0IFwwMzNbMTs5N20uLi4nKQoJcHJpbnQoJ1x4MWJbMTs5Nm1bIV0gXHgxYlsxOzkzbVN0b3AgQ1RSTCt6JykKCXByaW50IDQzKiJcMDMzWzE7OTZtPSIKCWZvciB3IGluIGtpbWFrWydkYXRhJ106CgkJam1sICs9MQoJCW1wc2guYXBwZW5kKGptbCkKCQlpZCA9IHdbJ2lkJ10KCQluYW1hID0gd1snbmFtZSddCgkJbGlua3MgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLyIraWQrIj9hY2Nlc3NfdG9rZW49Iit0b2tldCkKCQl6ID0ganNvbi5sb2FkcyhsaW5rcy50ZXh0KQoJCXRyeToKCQkJbWFpbCA9IHpbJ2VtYWlsJ10KCQkJeWFob28gPSByZS5jb21waWxlKHInQC4qJykKCQkJb3R3ID0geWFob28uc2VhcmNoKG1haWwpLmdyb3VwKCkKCQkJaWYgJ3lhaG9vLmNvbScgaW4gb3R3OgoJCQkJYnIub3BlbigiaHR0cHM6Ly9sb2dpbi55YWhvby5jb20vY29uZmlnL2xvZ2luPy5zcmM9ZnBjdHgmLmludGw9aWQmLmxhbmc9aWQtSUQmLmRvbmU9aHR0cHM6Ly9pZC55YWhvby5jb20iKQoJCQkJYnIuX2ZhY3RvcnkuaXNfaHRtbCA9IFRydWUKCQkJCWJyLnNlbGVjdF9mb3JtKG5yPTApCgkJCQliclsidXNlcm5hbWUiXSA9IG1haWwKCQkJCWtsaWsgPSBici5zdWJtaXQoKS5yZWFkKCkKCQkJCWpvayA9IHJlLmNvbXBpbGUocicibWVzc2FnZXMuRVJST1JfSU5WQUxJRF9VU0VSTkFNRSI+LionKQoJCQkJdHJ5OgoJCQkJCXBlayA9IGpvay5zZWFyY2goa2xpaykuZ3JvdXAoKQoJCQkJZXhjZXB0OgoJCQkJCWNvbnRpbnVlCgkJCQlpZiAnIm1lc3NhZ2VzLkVSUk9SX0lOVkFMSURfVVNFUk5BTUUiPicgaW4gcGVrOgoJCQkJCXByaW50KCJcMDMzWzE7OTZtW+Kck10gXDAzM1sxOzkybVZVTE4iKQoJCQkJCXByaW50KCJcMDMzWzE7OTZtW+KeuV0gXDAzM1sxOzk3bUlEICAgXDAzM1sxOzkxbTogXDAzM1sxOzkybSIraWQpCgkJCQkJcHJpbnQoIlwwMzNbMTs5Nm1b4p65XSBcMDMzWzE7OTdtRW1haWxcMDMzWzE7OTFtOiBcMDMzWzE7OTJtIittYWlsKQoJCQkJCXByaW50KCJcMDMzWzE7OTZtW+KeuV0gXDAzM1sxOzk3bU5hbWEgXDAzM1sxOzkxbTogXDAzM1sxOzkybSIrbmFtYSkKCQkJCQlzYXZlID0gb3Blbignb3V0L1RlbWFuTWFpbFZ1bG4udHh0JywnYScpCgkJCQkJc2F2ZS53cml0ZSgiTmFtYSA6ICIrIG5hbWEgKyAnXG4nICJJRCAgICAgICAgOiAiKyBpZCArICdcbicgIkVtYWlsICA6ICIrIG1haWwgKyAnXG5cbicpCgkJCQkJc2F2ZS5jbG9zZSgpCgkJCQkJYmVyaGFzaWwuYXBwZW5kKG1haWwpCgkJZXhjZXB0IEtleUVycm9yOgoJCQlwYXNzCglwcmludCA0MioiXDAzM1sxOzk2bT0iCglwcmludCAnXDAzM1sxOzk2bVtcMDMzWzE7OTdt4pyTXDAzM1sxOzk2bV0gXDAzM1sxOzkybVNlbGVzYWkgXDAzM1sxOzk3bS4uLi4nCglwcmludCJcMDMzWzE7OTZtWytdIFwwMzNbMTs5Mm1Ub3RhbCBcMDMzWzE7OTFtOiBcMDMzWzE7OTdtIitzdHIobGVuKGJlcmhhc2lsKSkKCXByaW50IlwwMzNbMTs5Nm1bK10gXDAzM1sxOzkybUZpbGUgdGVyc2ltcGFuIFwwMzNbMTs5MW06XDAzM1sxOzk3bSBvdXQvVGVtYW5NYWlsVnVsbi50eHQiCglyYXdfaW5wdXQoIlxuXDAzM1sxOzk2bVtcMDMzWzE7OTdtS2VtYmFsaVwwMzNbMTs5Nm1dIikKCW1lbnUoKQoJCmRlZiBjbG9uZV9kYXJpX21lbWJlcl9ncm91cCgpOgoJZ2xvYmFsIHRva2V0Cglvcy5zeXN0ZW0oJ2NsZWFyJykKCXRyeToKCQl0b2tldD1vcGVuKCdsb2dpbi50eHQnLCdyJykucmVhZCgpCglleGNlcHQgSU9FcnJvcjoKCQlwcmludCJcMDMzWzE7OTZtWyFdIFx4MWJbMTs5MW1Ub2tlbiBpbnZhbGlkIgoJCW9zLnN5c3RlbSgncm0gLXJmIGxvZ2luLnR4dCcpCgkJdGltZS5zbGVlcCgxKQoJCWtlbHVhcigpCgl0cnk6CgkJb3MubWtkaXIoJ291dCcpCglleGNlcHQgT1NFcnJvcjoKCQlwYXNzCglvcy5zeXN0ZW0oJ2NsZWFyJykKCXByaW50IGxvZ28KCW1wc2ggPSBbXQoJam1sID0gMAoJcHJpbnQgNDIqIlwwMzNbMTs5Nm09IgoJaWQ9cmF3X2lucHV0KCdcMDMzWzE7OTZtWytdIFwwMzNbMTs5M21NYXN1a2FuIElEIGdyb3VwIFwwMzNbMTs5MW06XDAzM1sxOzk3bSAnKQoJdHJ5OgoJCXI9cmVxdWVzdHMuZ2V0KCdodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS9ncm91cC8/aWQ9JytpZCsnJmFjY2Vzc190b2tlbj0nK3Rva2V0KQoJCWFzdz1qc29uLmxvYWRzKHIudGV4dCkKCQlwcmludCJcMDMzWzE7OTZtW1wwMzNbMTs5N23inJNcMDMzWzE7OTZtXSBcMDMzWzE7OTNtTmFtYSBncm91cCBcMDMzWzE7OTFtOlwwMzNbMTs5N20gIithc3dbJ25hbWUnXQoJZXhjZXB0IEtleUVycm9yOgoJCXByaW50IlwwMzNbMTs5Nm1bIV0gXHgxYlsxOzkxbUdyb3VwIHRpZGFrIGRpdGVtdWthbiIKCQlyYXdfaW5wdXQoIlxuXDAzM1sxOzk2bVtcMDMzWzE7OTdtS2VtYmFsaVwwMzNbMTs5Nm1dIikKCQltZW51KCkKCWphbGFuKCdcMDMzWzE7OTZtW+Kcul0gXDAzM1sxOzkzbU1lbmdhbWJpbCBlbWFpbCBcMDMzWzE7OTdtLi4uJykKCXRlbWFuID0gcmVxdWVzdHMuZ2V0KCdodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8nK2lkKycvbWVtYmVycz9maWVsZHM9bmFtZSxpZCZsaW1pdD05OTk5OTk5OTkmYWNjZXNzX3Rva2VuPScrdG9rZXQpCglraW1hayA9IGpzb24ubG9hZHModGVtYW4udGV4dCkKCWphbGFuKCdcMDMzWzE7OTZtW+Kcul0gXDAzM1sxOzkzbVN0YXJ0IFwwMzNbMTs5N20uLi4nKQoJcHJpbnQoJ1x4MWJbMTs5Nm1bIV0gXHgxYlsxOzkzbVN0b3AgQ1RSTCt6JykKCXByaW50IDQyKiJcMDMzWzE7OTZtPSIKCWZvciB3IGluIGtpbWFrWydkYXRhJ106CgkJam1sICs9MQoJCW1wc2guYXBwZW5kKGptbCkKCQlpZCA9IHdbJ2lkJ10KCQluYW1hID0gd1snbmFtZSddCgkJbGlua3MgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLyIraWQrIj9hY2Nlc3NfdG9rZW49Iit0b2tldCkKCQl6ID0ganNvbi5sb2FkcyhsaW5rcy50ZXh0KQoJCXRyeToKCQkJbWFpbCA9IHpbJ2VtYWlsJ10KCQkJeWFob28gPSByZS5jb21waWxlKHInQC4qJykKCQkJb3R3ID0geWFob28uc2VhcmNoKG1haWwpLmdyb3VwKCkKCQkJaWYgJ3lhaG9vLmNvbScgaW4gb3R3OgoJCQkJYnIub3BlbigiaHR0cHM6Ly9sb2dpbi55YWhvby5jb20vY29uZmlnL2xvZ2luPy5zcmM9ZnBjdHgmLmludGw9aWQmLmxhbmc9aWQtSUQmLmRvbmU9aHR0cHM6Ly9pZC55YWhvby5jb20iKQoJCQkJYnIuX2ZhY3RvcnkuaXNfaHRtbCA9IFRydWUKCQkJCWJyLnNlbGVjdF9mb3JtKG5yPTApCgkJCQliclsidXNlcm5hbWUiXSA9IG1haWwKCQkJCWtsaWsgPSBici5zdWJtaXQoKS5yZWFkKCkKCQkJCWpvayA9IHJlLmNvbXBpbGUocicibWVzc2FnZXMuRVJST1JfSU5WQUxJRF9VU0VSTkFNRSI+LionKQoJCQkJdHJ5OgoJCQkJCXBlayA9IGpvay5zZWFyY2goa2xpaykuZ3JvdXAoKQoJCQkJZXhjZXB0OgoJCQkJCWNvbnRpbnVlCgkJCQlpZiAnIm1lc3NhZ2VzLkVSUk9SX0lOVkFMSURfVVNFUk5BTUUiPicgaW4gcGVrOgoJCQkJCXByaW50KCJcMDMzWzE7OTZtW+Kck10gXDAzM1sxOzkybVZVTE4iKQoJCQkJCXByaW50KCJcMDMzWzE7OTZtW+KeuV0gXDAzM1sxOzk3bUlEICAgXDAzM1sxOzkxbTogXDAzM1sxOzkybSIraWQpCgkJCQkJcHJpbnQoIlwwMzNbMTs5Nm1b4p65XSBcMDMzWzE7OTdtRW1haWxcMDMzWzE7OTFtOiBcMDMzWzE7OTJtIittYWlsKQoJCQkJCXByaW50KCJcMDMzWzE7OTZtW+KeuV0gXDAzM1sxOzk3bU5hbWEgXDAzM1sxOzkxbTogXDAzM1sxOzkybSIrbmFtYSkKCQkJCQlzYXZlID0gb3Blbignb3V0L0dydXBNYWlsVnVsbi50eHQnLCdhJykKCQkJCQlzYXZlLndyaXRlKCJOYW1hIDogIisgbmFtYSArICdcbicgIklEICAgICAgICA6ICIrIGlkICsgJ1xuJyAiRW1haWwgIDogIisgbWFpbCArICdcblxuJykKCQkJCQlzYXZlLmNsb3NlKCkKCQkJCQliZXJoYXNpbC5hcHBlbmQobWFpbCkKCQlleGNlcHQgS2V5RXJyb3I6CgkJCXBhc3MKCXByaW50IDQyKiJcMDMzWzE7OTZtPSIKCXByaW50ICdcMDMzWzE7OTZtW1wwMzNbMTs5N23inJNcMDMzWzE7OTZtXSBcMDMzWzE7OTJtU2VsZXNhaSBcMDMzWzE7OTdtLi4uLicKCXByaW50IlwwMzNbMTs5Nm1bK10gXDAzM1sxOzkybVRvdGFsIFwwMzNbMTs5MW06IFwwMzNbMTs5N20iK3N0cihsZW4oYmVyaGFzaWwpKQoJcHJpbnQiXDAzM1sxOzk2bVsrXSBcMDMzWzE7OTJtRmlsZSB0ZXJzaW1wYW4gXDAzM1sxOzkxbTpcMDMzWzE7OTdtIG91dC9HcnVwTWFpbFZ1bG4udHh0IgoJcmF3X2lucHV0KCJcblwwMzNbMTs5Nm1bXDAzM1sxOzk3bUtlbWJhbGlcMDMzWzE7OTZtXSIpCgltZW51KCkKCQoKZGVmIGNsb25lX2RhcmlfZmlsZSgpOgoJZ2xvYmFsIHRva2V0Cglvcy5zeXN0ZW0oJ2NsZWFyJykKCXRyeToKCQl0b2tldD1vcGVuKCdsb2dpbi50eHQnLCdyJykucmVhZCgpCglleGNlcHQgSU9FcnJvcjoKCQlwcmludCJcMDMzWzE7OTZtWyFdIFx4MWJbMTs5MW1Ub2tlbiBpbnZhbGlkIgoJCW9zLnN5c3RlbSgncm0gLXJmIGxvZ2luLnR4dCcpCgkJdGltZS5zbGVlcCgxKQoJCWtlbHVhcigpCgl0cnk6CgkJb3MubWtkaXIoJ291dCcpCglleGNlcHQgT1NFcnJvcjoKCQlwYXNzCglvcy5zeXN0ZW0oJ2NsZWFyJykKCXByaW50IGxvZ28KCXByaW50IDQyKiJcMDMzWzE7OTZtPSIKCWZpbGVzID0gcmF3X2lucHV0KCJcMDMzWzE7OTZtWytdIFwwMzNbMTs5M21OYW1hIEZpbGUgXDAzM1sxOzkxbTogXDAzM1sxOzk3bSIpCgl0cnk6CgkJdG90YWwgPSBvcGVuKGZpbGVzLCJyIikKCQltYWlsID0gdG90YWwucmVhZGxpbmVzKCkKCWV4Y2VwdCBJT0Vycm9yOgoJCXByaW50IlwwMzNbMTs5Nm1bIV0gXHgxYlsxOzkxbUZpbGUgdGlkYWsgZGl0ZW11a2FuIgoJCXJhd19pbnB1dCgiXG5cMDMzWzE7OTZtW1wwMzNbMTs5N21LZW1iYWxpXDAzM1sxOzk2bV0iKQoJCW1lbnUoKQoJbXBzaCA9IFtdCglqbWwgPSAwCglqYWxhbignXDAzM1sxOzk2bVvinLpdIFwwMzNbMTs5M21TdGFydCBcMDMzWzE7OTdtLi4uJykKCXByaW50KCdceDFiWzE7OTZtWyFdIFx4MWJbMTs5M21TdG9wIENUUkwreicpCglwcmludCA0MioiXDAzM1sxOzk2bT0iCgltYWlsID0gb3BlbihmaWxlcywiciIpLnJlYWRsaW5lcygpCglmb3IgcHcgaW4gbWFpbDoKCQltYWlsID0gcHcucmVwbGFjZSgiXG4iLCIiKQoJCWptbCArPTEKCQltcHNoLmFwcGVuZChqbWwpCgkJeWFob28gPSByZS5jb21waWxlKHInQC4qJykKCQlvdHcgPSB5YWhvby5zZWFyY2gobWFpbCkuZ3JvdXAoKQoJCWlmICd5YWhvby5jb20nIGluIG90dzoKCQkJYnIub3BlbigiaHR0cHM6Ly9sb2dpbi55YWhvby5jb20vY29uZmlnL2xvZ2luPy5zcmM9ZnBjdHgmLmludGw9aWQmLmxhbmc9aWQtSUQmLmRvbmU9aHR0cHM6Ly9pZC55YWhvby5jb20iKQoJCQlici5fZmFjdG9yeS5pc19odG1sID0gVHJ1ZQoJCQlici5zZWxlY3RfZm9ybShucj0wKQoJCQliclsidXNlcm5hbWUiXSA9IG1haWwKCQkJa2xpayA9IGJyLnN1Ym1pdCgpLnJlYWQoKQoJCQlqb2sgPSByZS5jb21waWxlKHInIm1lc3NhZ2VzLkVSUk9SX0lOVkFMSURfVVNFUk5BTUUiPi4qJykKCQkJdHJ5OgoJCQkJcGVrID0gam9rLnNlYXJjaChrbGlrKS5ncm91cCgpCgkJCWV4Y2VwdDoKCQkJCWNvbnRpbnVlCgkJCWlmICcibWVzc2FnZXMuRVJST1JfSU5WQUxJRF9VU0VSTkFNRSI+JyBpbiBwZWs6CgkJCQlwcmludCgiXDAzM1sxOzk2bVvinJNdIFwwMzNbMTs5Mm1WVUxOIikKCQkJCXByaW50KCJcMDMzWzE7OTZtW+KeuV0gXDAzM1sxOzk3bUVtYWlsXDAzM1sxOzkxbTogXDAzM1sxOzkybSIrbWFpbCkKCQkJCXNhdmUgPSBvcGVuKCdvdXQvTWFpbFZ1bG4udHh0JywnYScpCgkJCQlzYXZlLndyaXRlKCJFbWFpbDogIisgbWFpbCArICdcblxuJykKCQkJCXNhdmUuY2xvc2UoKQoJCQkJYmVyaGFzaWwuYXBwZW5kKG1haWwpCglwcmludCA0MioiXDAzM1sxOzk2bT0iCglwcmludCAnXDAzM1sxOzk2bVtcMDMzWzE7OTdt4pyTXDAzM1sxOzk2bV0gXDAzM1sxOzkybVNlbGVzYWkgXDAzM1sxOzk3bS4uLi4nCglwcmludCJcMDMzWzE7OTZtWytdIFwwMzNbMTs5Mm1Ub3RhbCBcMDMzWzE7OTFtOiBcMDMzWzE7OTdtIitzdHIobGVuKGJlcmhhc2lsKSkKCXByaW50IlwwMzNbMTs5Nm1bK10gXDAzM1sxOzkybUZpbGUgVGVyc2ltcGFuIFwwMzNbMTs5MW06XDAzM1sxOzk3bSBvdXQvRmlsZU1haWxWdWxuLnR4dCIKCXJhd19pbnB1dCgiXG5cMDMzWzE7OTZtW1wwMzNbMTs5N21LZW1iYWxpXDAzM1sxOzk2bV0iKQoJbWVudSgpCgkKICAgICAgIAoJCQppZiBfX25hbWVfXyA9PSAnX19tYWluX18nOgoJc2lhcGEoKQo='))
